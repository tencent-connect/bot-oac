openapi: 3.0.0
info:
  title: QQ机器人开放平台
  description: QQ频道机器人OpenAPI
  version: 1.0.0
  termsOfService: https://bot.q.qq.com/
  contact:
    name: ''
    url: www.qq.com
servers:
  - url: 'https://api.sgroup.qq.com'
    description: 正式环境
  - url: 'https://sandbox.api.sgroup.qq.com'
    description: 沙箱环境，沙箱环境只会收到测试频道的事件，且调用openapi仅能操作测试频道
security:
  - authorization:
      - read
      - write
tags:
  - name: 用户API
    description: 用户相关API集合，包括获取用户详情和用户所在频道列表
    externalDocs:
      description: ''
      url: 'https://bot.q.qq.com/wiki/develop/api/openapi/user/model.html'
  - name: 频道API
    description: 频道相关API集合
    externalDocs:
      description: ''
      url: 'https://bot.q.qq.com/wiki/develop/api/openapi/guild/model.html'
  - name: 子频道API
    description: 子频道相关API集合
    externalDocs:
      description: ''
      url: 'https://bot.q.qq.com/wiki/develop/api/openapi/guild/model.html'
  - name: 成员API
    description: 频道成员相关API集合
    externalDocs:
      description: ''
      url: 'https://bot.q.qq.com/wiki/develop/api/openapi/member/model.html'
  - name: 频道身份组API
    description: 频道身份组相关API集合
    externalDocs:
      description: ''
      url: 'https://bot.q.qq.com/wiki/develop/api/openapi/guild/role_model.html'
  - name: 子频道权限API
    description: 子频道权限相关API集合
    externalDocs:
      description: ''
      url: >-
        https://bot.q.qq.com/wiki/develop/api/openapi/channel_permissions/model.html
  - name: 消息API
    description: 消息相关API集合
    externalDocs:
      description: ''
      url: 'https://bot.q.qq.com/wiki/develop/api/openapi/message/model.html'
  - name: 禁言API
    description: 禁言相关API集合
    externalDocs:
      description: ''
      url: >-
        https://bot.q.qq.com/wiki/develop/api/openapi/guild/patch_guild_mute.html
  - name: 私信API
    description: 私信相关API集合
    externalDocs:
      description: ''
      url: 'https://bot.q.qq.com/wiki/develop/api/openapi/dms/model.html'
  - name: 公告API
    description: ''
    externalDocs:
      description: ''
      url: 'https://bot.q.qq.com/wiki/develop/api/openapi/announces/model.html'
  - name: 日程API
    description: 日程相关API
    externalDocs:
      description: ''
      url: 'https://bot.q.qq.com/wiki/develop/api/openapi/schedule/model.html'
  - name: 音频API
    description: 音频相关API集合
    externalDocs:
      description: ''
      url: 'https://bot.q.qq.com/wiki/develop/api/openapi/audio/model.html'
  - name: API接口权限API
    description: API接口权限API
    externalDocs:
      description: ''
      url: 'https://bot.q.qq.com/wiki/develop/api/openapi/api_permissions/model.html'
  - name: WebSocket API
    description: WS相关API集合
    externalDocs:
      description: ''
      url: 'https://bot.q.qq.com/wiki/develop/api/openapi/wss/url_get.html'
paths:
  '/guilds/{guild_id}':
    get:
      summary: 获取频道详情
      description: 用于获取 guild_id 指定的频道的详情
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/guild/get_guild.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
      
      responses:
        default:
          description: Default response
      tags:
        - 频道API
  /users/@me:
    get:
      summary: 获取用户详情
      description: 用于获取当前用户（机器人）详情
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/user/me.html'
      parameters: []
      
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 用户API
  /users/@me/guilds:
    get:
      summary: 获取用户频道列表
      description: >
        用于获取当前用户（机器人）所加入的频道列表，支持分页，参数 before、after 同时存在时，以 before 为准。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/user/guilds.html'
      parameters:
        - name: before
          in: query
          required: false
          schema:
            type: string
          description: 读此 guild id 之前的数据，before 设置时， 先反序，再分页
        - name: after
          in: query
          required: false
          schema:
            type: string
          description: 读取此 id 之后的数据
        - name: limit
          in: query
          required: false
          schema:
            type: number
            default: 100
          description: 每次拉取多少条数据，最大不超过 100，默认 100
      
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Guild'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 用户API
  /guilds/{guild_id}/channels:
    get:
      summary: 获取子频道列表
      description: 用于获取 guild_id 指定的频道下的子频道列表
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/channel/get_channels.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
      
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 子频道API
    post:
      summary: 创建子频道
      description: |-
        用于在 guild_id 指定的频道下创建一个子频道。

          * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。
          * 创建成功后，返回创建成功的子频道对象，同时会触发一个频道创建的事件通知。

          * `公域机器人暂不支持申请，仅私域机器人可用，选择私域机器人后默认开通。`
          * `注意: 开通后需要先将机器人从频道移除，然后重新添加，方可生效。`
      externalDocs:
        url: >-
          https://bot.q.qq.com/wiki/develop/api/openapi/channel/post_channels.html
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCreate'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 子频道API   
  /channels/{channel_id}:
    get:
      summary: 获取子频道详情
      description: 用于获取 channel_id 指定的子频道的详情
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/channel/get_channel.html'
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
      
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 子频道API
    patch:
      summary: 修改子频道
      description: |-
        用于修改 channel_id 指定的子频道的信息。

          * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。
          * 修改成功后，会触发子频道更新事件。

          * `公域机器人暂不支持申请，仅私域机器人可用，选择私域机器人后默认开通。`
          * `注意: 开通后需要先将机器人从频道移除，然后重新添加，方可生效。`
      externalDocs:
        url: >-
          https://bot.q.qq.com/wiki/develop/api/openapi/channel/patch_channel.html
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelUpdate'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 子频道API
    delete:
      summary: 删除子频道
      description: >-
        用于删除 channel_id 指定的子频道。
          * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。
          * 修改成功后，会触发子频道删除事件。

          * `公域机器人暂不支持申请，仅私域机器人可用，选择私域机器人后默认开通。`
          * `注意: 开通后需要先将机器人从频道移除，然后重新添加，方可生效。`
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/channel/delete_channel.html'
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
      
      responses:
        '200':
          description: 成功
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 子频道API       
  /guilds/{guild_id}/members:
    get:
      summary: 获取频道成员列表
      description: >-
        用于获取 guild_id 指定的频道中所有成员的详情列表，支持分页。

          * `公域机器人暂不支持申请，仅私域机器人可用，选择私域机器人后默认开通。`
          * `注意: 开通后需要先将机器人从频道移除，然后重新添加，方可生效。`
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/member/get_members.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
        - name: after
          in: query
          required: false
          schema:
            type: string
          description: 上一次回包中最后一个member的user id， 如果是第一次请求填 0，默认为 0
        - name: limit
          in: query
          required: false
          schema:
            type: number
            default: 1
          description: 分页大小，1-400，默认是 1。成员较多的频道尽量使用较大的limit值，以减少请求数
      
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 成员API
  /guilds/{guild_id}/members/{user_id}:
    get:
      summary: 获取成员详情
      description: 用于获取 guild_id 指定的频道中 user_id 对应成员的详细信息
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/member/get_member.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
        - name: user_id
          in: path
          required: true
          schema:
            type: string
          description: 成员ID
      
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 成员API
    delete:
      summary: 删除频道成员
      description: >-
        用于删除 guild_id 指定的频道下的成员 user_id。

          * 需要使用的 token 对应的用户具备踢人权限。如果是机器人，要求被添加为管理员。
          * 操作成功后，会触发频道成员删除事件。
          * 无法移除身份为管理员的成员

          * `公域机器人暂不支持申请，仅私域机器人可用，选择私域机器人后默认开通。`
          * `注意: 开通后需要先将机器人从频道移除，然后重新添加，方可生效。`
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/member/delete_member.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
        - name: user_id
          in: path
          required: true
          schema:
            type: string
          description: 成员ID
      
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                add_blacklist:
                  type: boolean
                  description: 删除成员的同时，将该用户添加到频道黑名单中
      responses:
        '204':
          description: 成功
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 成员API
  /guilds/{guild_id}/roles:
    get:
      summary: 获取频道身份组列表
      description: 用于获取 guild_id指定的频道下的身份组列表
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/guild/get_guild_roles.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
      
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  guild_id:
                    type: string
                    description: 频道 ID
                  roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
                    description: 频道身份组对象列表
                  role_num_limit:
                    type: string
                    description: 默认分组上限
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 频道身份组API
    post:
      summary: 创建频道身份组
      description: >-
        用于在guild_id 指定的频道下创建一个身份组。

          * 需要使用的 token 对应的用户具备创建身份组权限。如果是机器人，要求被添加为管理员。
          * 参数为非必填，但至少需要传其中之一，默认为空或 0。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/guild/post_guild_role.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: 名称
                color:
                  type: number
                  description: ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）
                hoist:
                  type: number
                  description: 在成员列表中单独展示,0-否, 1-是
              required:
                - name
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  role_id:
                    type: string
                    description: 频道身份组 ID
                  role:
                    $ref: '#/components/schemas/GuildRole'
                    description: 频道身份组对象
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 频道身份组API
  /guilds/{guild_id}/roles/{role_id}:
    patch:
      summary: 修改频道身份组
      description: >-
        用于修改频道 guild_id 下 role_id 指定的身份组。

          * 需要使用的 token 对应的用户具备修改身份组权限。如果是机器人，要求被添加为管理员。
          * 接口会修改传入的字段，不传入的默认不会修改，至少要传入一个参数。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/guild/patch_guild_role.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
        - name: role_id
          in: path
          required: true
          schema:
            type: string
          description: 身份组ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: 名称
                color:
                  type: number
                  description: ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）
                hoist:
                  type: number
                  description: 在成员列表中单独展示,0-否, 1-是
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  guild_id:
                    type: string
                    description: 频道 ID
                  role_id:
                    type: string
                    description: 频道身份组 ID
                  role:
                    $ref: '#/components/schemas/GuildRole'
                    description: 频道身份组对象
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 频道身份组API
    delete:
      summary: 删除频道身份组
      description: >-
        用于删除频道guild_id下 role_id 对应的身份组。

        * 需要使用的 token 对应的用户具备`删除身份组权限`。如果是机器人，要求被添加为管理员。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/guild/delete_guild_role.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
        - name: role_id
          in: path
          required: true
          schema:
            type: string
          description: 身份组ID
      
      responses:
        '204':
          description: 成功
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 频道身份组API
  /guilds/{guild_id}/members/{user_id}/roles/{role_id}:
    put:
      summary: 创建频道身份组成员
      description: >-
        用于将频道guild_id下的用户 user_id 添加到身份组 role_id 。

          * 需要使用的 token 对应的用户具备增加身份组成员权限。如果是机器人，要求被添加为管理员。
          * 如果要增加的身份组 ID 是5-子频道管理员，需要增加 channel 对象来指定具体是哪个子频道。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/guild/put_guild_member_role.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
        - name: role_id
          in: path
          required: true
          schema:
            type: string
          description: 身份组ID
        - name: user_id
          in: path
          required: true
          schema:
            type: string
          description: 成员ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                id:
                  type: string
                  description: 子频道 id 
      responses:
        '204':
          description: 成功
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 频道身份组API
    delete:
      summary: 删除频道身份组成员
      description: >-
        用于将 用户 user_id 从 频道 guild_id 的 role_id 身份组中移除。

          * 需要使用的 token 对应的用户具备删除身份组成员权限。如果是机器人，要求被添加为管理员。
          * 如果要删除的身份组 ID 是5-子频道管理员，需要增加 channel 对象来指定具体是哪个子频道。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/guild/delete_guild_member_role.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
        - name: role_id
          in: path
          required: true
          schema:
            type: string
          description: 身份组ID
        - name: user_id
          in: path
          required: true
          schema:
            type: string
          description: 成员ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                id:
                  type: string
                  description: 子频道 id
      responses:
        '204':
          description: 成功
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 频道身份组API
  /channels/{channel_id}/members/{user_id}/permissions:
    get:
      summary: 获取子频道用户权限
      description: >
        用于获取 子频道channel_id 下用户 user_id 的权限。

          * 获取子频道用户权限。
          * 要求操作人具有`管理子频道的权限`，如果是机器人，则需要将机器人设置为管理员。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/channel_permissions/get_channel_permissions.html'
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
        - name: user_id
          in: path
          required: true
          schema:
            type: string
          description: 成员ID
      
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelPermissions'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 子频道权限API
    put:
      summary: 修改子频道权限
      description: >
        用于修改子频道 channel_id 下用户 user_id 的权限。

          * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。
          * 参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予用户权限即把add对应位置 1，删除用户权限即把remove对应位置 1。当两个字段同一位都为 1，表现为删除权限。
          * `本接口不支持修改可管理子频道权限。`
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/channel_permissions/put_channel_permissions.html'
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
        - name: user_id
          in: path
          required: true
          schema:
            type: string
          description: 成员ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                add:
                  type: string
                  description: 字符串形式的位图表示赋予用户的权限
                remove:
                  type: string
                  description: 字符串形式的位图表示删除用户的权限
      responses:
        '204':
          description: 成功
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 子频道权限API  
  /channels/{channel_id}/roles/{role_id}/permissions:
    get:
      summary: 获取子频道身份组权限
      description: >
        用于获取子频道 channel_id 下身份组 role_id 的权限。

        * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/channel_permissions/get_channel_roles_permissions.html'
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
        - name: role_id
          in: path
          required: true
          schema:
            type: string
          description: 身份组ID
      
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelPermissions'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 子频道权限API
    put:
      summary: 修改子频道身份组权限
      description: >
        用于修改子频道 channel_id 下身份组 role_id 的权限。

        * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。
        * 参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予身份组权限即把add对应位置 1，删除身份组权限即把remove对应位置 1。当两个字段同一位都为 1，表现为删除权限。
        * `本接口不支持修改可管理子频道权限。`
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/channel_permissions/put_channel_roles_permissions.html'
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
        - name: role_id
          in: path
          required: true
          schema:
            type: string
          description: 身份组ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                add:
                  type: string
                  description: 字符串形式的位图表示赋予用户的权限
                remove:
                  type: string
                  description: 字符串形式的位图表示删除用户的权限
      responses:
        '204':
          description: 成功
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 子频道权限API
  /channels/{channel_id}/messages/{message_id}:
    get:
      summary: 获取指定消息
      description: 用于获取子频道 channel_id 下的消息 message_id 的详情。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/message/get_message_of_id.html'
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
        - name: message_id
          in: path
          required: true
          schema:
            type: string
          description: 消息ID
      
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 消息API
  /channels/{channel_id}/messages:
    post:
      summary: 发送消息
      description: > 
        用于向 channel_id 指定的子频道发送消息。

          * 要求操作人在该子频道具有发送消息的权限。
          * 主动推送消息，默认每天往每个频道可推送的消息数是 `20` 条，超过会被限制。
          * 主动推送消息在每个频道中，每天可以往 `2` 个子频道推送消息。超过后会被限制。
          * 不论主动消息还是被动消息，在一个子频道中，每 `1s` 只能发送 `5` 条消息。
          * 被动回复消息有效期为 `5` 分钟。超时会报错。
          * 发送消息接口要求机器人接口需要连接到 websocket 上保持在线状态
          * 有关主动消息审核，可以通过 Intents 中审核事件 MESSAGE_AUDIT 返回 MessageAudited 对象获取结果。
      
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/message/post_messages.html'
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageSend'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 消息API
  /users/@me/dms:
    post:
      summary: 创建私信会话
      description: >
        用于机器人和在同一个频道内的成员创建私信会话。

          * 机器人和用户存在共同频道才能创建私信会话。
          * 创建成功后，返回创建成功的频道 id ，子频道 id 和创建时间。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/dms/post_dms.html'
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                recipient_id:
                  type: string
                  description: 接收者 id
                source_guild_id:
                  type: string
                  description: 源频道 id
              required:
                - recipient_id
                - source_guild_id
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DMS'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 私信API
  /dms/{guild_id}/messages:
    post:
      summary: 发送私信
      description: >
        用于发送私信消息，前提是已经创建了私信会话。

          * 私信的 guild_id 在创建私信会话时以及私信消息事件中获取。
          * 私信场景下，每个机器人每天可以对一个用户发 `2` 条主动消息。
          * 私信场景下，每个机器人每天累计可以发 `200` 条主动消息。
          * 私信场景下，被动消息没有条数限制。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/dms/post_dms_messages.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageSend'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 私信API
  /guilds/{guild_id}/mute:
    patch:
      summary: 禁言全员
      description: >
        用于将频道的全体成员（非管理员）禁言。

          * 需要使用的 token 对应的用户具备管理员权限。如果是机器人，要求被添加为管理员。
          * 该接口同样可用于解除禁言，具体使用见解除全员禁言。
          * `该接口同样支持解除全员禁言，将mute_end_timestamp或mute_seconds传值为字符串'0'即可`。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/guild/patch_guild_mute.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                mute_end_timestamp:
                  type: string
                  description: 禁言到期时间戳，绝对时间戳，单位：秒（与 mute_seconds 字段同时赋值的话，以该字段为准）
                mute_seconds:
                  type: string
                  description: 禁言多少秒（两个字段二选一，默认以 mute_end_timestamp 为准）
              minProperties: 1
      responses:
        '204':
          description: 成功
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 禁言API
  /guilds/{guild_id}/members/{user_id}/mute:
    patch:
      summary: 禁言指定成员
      description: >
        用于禁言频道 guild_id 下的成员 user_id。

          * 需要使用的 token 对应的用户具备管理员权限。如果是机器人，要求被添加为管理员。
          * `该接口同样可用于解除禁言，具体使用见解除指定成员禁言`。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/guild/patch_guild_member_mute.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
        - name: user_id
          in: path
          required: true
          schema:
            type: string
          description: 成员ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                mute_end_timestamp:
                  type: string
                  description: 禁言到期时间戳，绝对时间戳，单位：秒（与 mute_seconds 字段同时赋值的话，以该字段为准）
                mute_seconds:
                  type: string
                  description: 禁言多少秒（两个字段二选一，默认以 mute_end_timestamp 为准）
              minProperties: 1
      responses:
        '204':
          description: 成功
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 禁言API
  /guilds/{guild_id}/announces:
    post:
      summary: 创建频道公告
      description: >
        用于将频道内的某条消息设置为频道全局公告
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/announces/post_guild_announces.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                message_id:
                  type: string
                  description: 消息 id
                channel_id:
                  type: string
                  description: 子频道 id
              required: 
                - message_id
                - channel_id
      responses:
        '204':
          description: 成功
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Announces'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 公告API
  /guilds/{guild_id}/announces/{message_id}:
    delete:
      summary: 删除频道公告
      description: >
        用于删除频道 guild_id 下 message_id 指定的全局公告。

          * message_id 有值时，会校验 message_id 合法性，若不校验校验 message_id，请将 message_id 设置为 all。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/announces/delete_guild_announces.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
        - name: message_id
          in: path
          required: true
          schema:
            type: string
          description: 消息ID
      
      responses:
        '204':
          description: 成功
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 公告API
  /channels/{channel_id}/announces:
    post:
      summary: 创建子频道公告
      description: 用于将子频道 channel_id 内的某条消息设置为子频道公告。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/announces/post_channel_announces.html'
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                message_id:
                  type: string
                  description: 消息 id
              required: 
                - message_id     
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announces'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 公告API
  /channels/{channel_id}/announces/{message_id}:
    delete:
      summary: 删除子频道公告
      description: >
        用于删除子频道 channel_id 下 message_id 指定的子频道公告。

          * message_id 有值时，会校验 message_id 合法性，若不校验校验 message_id，请将 message_id 设置为 all。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/announces/delete_channel_announces.html'
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
        - name: message_id
          in: path
          required: true
          schema:
            type: string
          description: 消息ID
      
      responses:
        '204':
          description: 成功
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 公告API
  /channels/{channel_id}/schedules:
    get:
      summary: 获取频道日程列表
      description: >
        用于获取channel_id指定的子频道中当天的日程列表。

        * 若带了参数 since，则返回结束时间在 since 之后的日程列表；若未带参数 since，则默认返回当天的日程列表。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/schedule/get_schedules.html'
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                since:
                  type: integer
                  description: 起始时间戳(ms)     
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 日程API
    post:
      summary: 创建日程
      description: >
        用于在 channel_id 指定的日程子频道下创建一个日程。

          * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。
          * 创建成功后，返回创建成功的日程对象。
          * 创建操作频次限制: 单个管理员每天限`10`次, 单个频道每天`100`次。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/schedule/post_schedule.html'
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleCreate'     
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 日程API
  /channels/{channel_id}/schedules/{schedule_id}:
    get:
      summary: 获取日程详情
      description: 获取日程子频道 channel_id 下 schedule_id 指定的的日程的详情。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/schedule/get_schedule.html'
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
        - name: schedule_id
          in: path
          required: true
          schema:
            type: string
          description: 日程ID
      
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 日程API
    patch:
      summary: 修改日程
      description: >
        用于修改日程子频道 channel_id 下 schedule_id 指定的日程的详情。

        * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/schedule/patch_schedule.html'
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
        - name: schedule_id
          in: path
          required: true
          schema:
            type: string
          description: 日程ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleUpdate' 
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 日程API
    delete:
      summary: 删除日程
      description: >
        用于删除日程子频道 channel_id 下 schedule_id 指定的日程。

        * 要求操作人具有`管理频道的权限`，如果是机器人，则需要将机器人设置为管理员。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/schedule/delete_schedule.html'
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
        - name: schedule_id
          in: path
          required: true
          schema:
            type: string
          description: 日程ID
      
      responses:
        '204':
          description: 成功
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 日程API
  /channels/{channel_id}/audio:
    post:
      summary: 音频控制
      description: >
        用于控制子频道 channel_id 下的音频。

        * 音频接口：仅限音频类机器人才能使用，后续会根据机器人类型自动开通接口权限，现如需调用，需联系平台申请权限。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/audio/audio_control.html'
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
          description: 子频道ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudioControl'  
      responses:
        '200':
          description: 成功
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - 音频API
  /guilds/{guild_id}/api_permission:
    get:
      summary: 获取频道可用权限列表
      description: >
        用于获取机器人在频道 guild_id 内可以使用的权限列表。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/api_permissions/get_guild_api_permission.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
      
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIPermission'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - API接口权限API
  /guilds/{guild_id}/api_permission/demand:
    post:
      summary: 创建频道 API 接口权限授权链接
      description: >
        用于创建 API 接口权限授权链接，该链接指向guild_id对应的频道 。

        * 每天只能在一个频道内发 `3` 条（默认值）频道权限授权链接。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/api_permissions/post_api_permission_demand.html'
      parameters:
        - name: guild_id
          in: path
          required: true
          schema:
            type: string
          description: 频道ID
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                channel_id:
                  type: string
                  description: 授权链接发送的子频道 id
                api_identify:
                  $ref: '#/components/schemas/APIPermissionDemandIdentify'
                  description: api 权限需求标识对象
                desc:
                  type: string
                  description: 机器人申请对应的 API 接口权限后可以使用功能的描述
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIPermissionDemand'
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - API接口权限API
  /gateway:
    get:
      summary: 获取通用 WSS 接入点
      description: 用于获取 WSS 接入地址，通过该地址可建立 websocket 长连接。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/wss/url_get.html'
      
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: websocket 的地址
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - WebSocket API
  /gateway/bot:
    get:
      summary: 获取带分片 WSS 接入点
      description: >
        用于获取 WSS 接入地址及相关信息，通过该地址可建立 websocket 长连接。相关信息包括：
          * 建议的分片数。
          * 目前连接数使用情况。
      externalDocs:
        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/wss/shard_url_get.html'
      
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: websocket 的地址
                  shards:
                    type: integer
                    description: 建议的 shard 数
                  session_start_limit:
                    $ref: '#/components/schemas/SessionStartLimit'
                    description: 创建 Session 限制信息
        '401':
          description: 认证失败
        '500':
          description: 处理失败
      tags:
        - WebSocket API

components:
  schemas:
    Guild:
      type: object
      properties:
        id:
          type: string
          description: 频道ID
          format: int64
        name:
          type: string
          description: 频道名称
        icon:
          type: string
          description: 频道头像地址
        owner_id:
          type: string
          description: 创建人用户ID
          format: int64
        owner:
          type: boolean
          description: 当前人是否是创建人
        member_count:
          type: integer
          description: 成员数
          format: int32
        max_members:
          type: integer
          description: 最大成员数
          format: int32
        description:
          type: string
          description: 描述
        joined_at:
          type: string
          description: 加入时间
      xml:
        name: Guild
      description: '频道对象,频道对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关。请不要理解为真实的 ID'
    User:
      type: object
      properties:
        id:
          type: string
          description: 用户ID
          format: int64
        username:
          type: string
          description: 用户名
        avatar:
          type: string
          description: 用户头像地址
        bot:
          type: boolean
          description: 是否是机器人
        union_openid:
          type: string
          description: 特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员
        union_user_account:
          type: string
          description: 机器人关联的互联应用的用户信息，与union_openid关联的应用是同一个。如需申请，请联系平台运营人员
      xml:
        name: User
      description: 用户对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关。请不要理解为真实的 ID
    Channel:
      type: object
      properties:
        id:
          type: string
          description: 子频道ID
          format: int64
        guild_id:
          type: string
          description: 频道ID
          format: int64
        name:
          type: string
          description: 子频道名称
        type:
          $ref: '#/components/schemas/ChannelType'
        sub_type:
          $ref: '#/components/schemas/ChannelSubType'
        position:
          type: integer
          description: 排序值
        parent_id:
          type: string
          description: 所属分组 id，仅对子频道有效，对 子频道分组（ChannelType=4） 无效
        owner_id:
          type: string
          description: 创建人 id
        private_type:
          $ref: '#/components/schemas/PrivateType'
        speak_permission:
          $ref: '#/components/schemas/SpeakPermission'
        application_id:
          $ref: '#/components/schemas/Application'
      xml:
        name: Channel
      description: 子频道对象,子频道对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关。请不要理解为真实的 ID
    Member:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
          description: 用户的频道基础信息，只有成员相关接口中会填充此信息
        nick:
          type: string
          description: 用户的昵称
        roles:
          type: array
          items:
            type: string
          description: 用户在频道内的身份组ID
        joined_at:
          type: string
          description: '用户加入频道的时间, ISO8601格式'
      xml:
        name: Member
      description: 成员对象
    Role:
      type: object
      properties:
        id:
          type: string
          description: 身份组ID
          format: int64
        name:
          type: string
          description: 名称
        color:
          type: integer
          description: ARGB的HEX十六进制颜色值转换后的十进制数值
        hoist:
          type: integer
          description: '是否在成员列表中单独展示: 0-否, 1-是'
        number:
          type: integer
          description: 人数
        member_limit:
          type: integer
          description: 成员上限
          format: uint32
      xml:
        name: Role
      description: 频道身份组对象
    ChannelPermissions:
      type: object
      properties:
        channel_id:
          type: string
          description: 子频道ID
          format: int64
        user_id:
          type: string
          description: 用户ID
        role_id:
          type: string
          description: 身份组ID,用户 id 或 身份组 id，只会返回其中之一
        permissions:
          $ref: '#/components/schemas/Permissions'
      xml:
        name: ChannelPermissions
      description: >
        子频道权限对象, 权限是QQ频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。
          * 用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。
          * 权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6FFF，会被序列化为十进制'28671'
    Message:
      type: object
      properties:
        id:
          type: string
          description: 消息ID
          format: int64
        channel_id:
          type: string
          description: 子频道ID
          format: int64
        guild_id:
          type: string
          description: 频道ID
          format: int64
        content:
          type: string
          description: 消息内容
        timestamp:
          type: string
          description: '消息创建时间,ISO8601 timestamp'
        edited_timestamp:
          type: string
          description: '消息编辑时间,ISO8601 timestamp'
        mention_everyone:
          type: boolean
          description: 是否是@全员消息
        author:
          $ref: '#/components/schemas/User'
          description: 消息创建者
        attachments:
          type: array
          description: 附件
          items:
            $ref: '#/components/schemas/MessageAttachment'
        embeds:
          type: array
          description: embed
          items:
            $ref: '#/components/schemas/MessageEmbed'
        mentions:
          type: array
          description: 消息中@的人
          items:
            $ref: '#/components/schemas/User'
        member:
          type: array
          description: 消息创建者的member信息
          items:
            $ref: '#/components/schemas/Member'
        ark:
          description: ark消息
          $ref: '#/components/schemas/MessageArk'
        seq:
          type: integer
          description: 用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序
      xml:
        name: Message
      description: 消息对象
    MessageAttachment:
      type: object
      properties:
        url:
          type: string
          description: 下载地址
      xml:
        name: MessageAttachment
      description: 消息附件
    MessageEmbed:
      type: object
      properties:
        title:
          type: string
          description: 标题
        prompt:
          type: string
          description: 消息弹窗内容
        thumbnail:
          $ref: '#/components/schemas/MessageEmbedThumbnail'
          description: 缩略图
        fields:
          type: array
          description: embed 字段数据
          items:
            $ref: '#/components/schemas/MessageEmbedField'
      xml:
        name: MessageEmbed
      description: embed消息
    MessageEmbedThumbnail:
      type: object
      properties:
        url:
          type: string
          description: 图片地址
      xml:
        name: MessageEmbedThumbnail
      description: 消息封面
    MessageEmbedField:
      type: object
      properties:
        name:
          type: string
          description: 字段
      xml:
        name: MessageEmbedField
      description: embed字段
    MessageArk:
      type: object
      properties:
        template_id:
          type: integer
          description: ark模板id（需要先申请）
        kv:
          type: array
          description: kv值列表
          items:
            $ref: '#/components/schemas/MessageArkKv'
      xml:
        name: MessageArk
      description: ark消息
    MessageArkKv:
      type: object
      properties:
        key:
          type: string
          description: key
        value:
          type: string
          description: value
        obj:
          type: array
          description: ark obj类型的列表
          items:
            $ref: '#/components/schemas/MessageArkObj'
      xml:
        name: MessageArkKv
      description: ARK消息KV
    MessageArkObj:
      type: object
      properties:
        obj_kv:
          type: array
          description: ark objkv列表
          items:
            $ref: '#/components/schemas/MessageArkObjKv'
      xml:
        name: MessageArkObj
      description: MessageArkObj
    MessageArkObjKv:
      type: object
      properties:
        key:
          type: string
          description: key
        value:
          type: string
          description: value
      xml:
        name: MessageArkObjKv
      description: MessageArkObjKv
    MessageReference:
      type: object
      properties:
        message_id:
          type: string
          description: 需要引用回复的消息ID
        ignore_get_message_error:
          type: boolean
          description: 是否忽略获取引用消息详情错误，默认否
      xml:
        name: MessageReference
      description: 消息附件
    MessageAudited:
      type: object
      properties:
        url:
          type: string
          description: 下载地址
      xml:
        name: MessageAudited
      description: 消息附件
    DMS:
      type: object
      properties:
        guild_id:
          type: string
          description: 私信会话关联的频道ID
          format: int64
        channel_id:
          type: string
          description: 私信会话关联的子频道ID
        create_time:
          type: string
          description: 创建私信会话时间戳
      xml:
        name: DMS
      description: 私信会话对象
    Announces:
      type: object
      properties:
        guild_id:
          type: string
          description: 频道ID
          format: int64
        channel_id:
          type: string
          description: 子频道ID
        message_id:
          type: string
          description: 消息ID
      xml:
        name: Announces
      description: 公告对象
    Schedule:
      type: object
      properties:
        id:
          type: string
          description: 日程ID
        name:
          type: string
          description: 日程名称
        description:
          type: string
          description: 日程描述
        start_timestamp:
          type: string
          description: 日程开始时间戳(ms)
          format: int64
        end_timestamp:
          type: string
          description: 日程结束时间戳(ms)
          format: int64
        creator:
          $ref: '#/components/schemas/Member'
          description: 创建者
        jump_channel_id:
          type: string
          description: 日程开始时跳转到的子频道 id
          format: int64
        remind_type:
          $ref: '#/components/schemas/RemindType'
      xml:
        name: Schedule
      description: 日程对象
    Emoji:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EmojiID'
        type:
          $ref: '#/components/schemas/EmojiType'
      xml:
        name: Emoji
      description: 表情对象
    MessageReaction:
      type: object
      properties:
        user_id:
          type: string
          description: 用户ID
          format: int64
        guild_id:
          type: string
          description: 频道ID
        channel_id:
          type: string
          description: 子频道ID
        target:
          $ref: '#/components/schemas/ReactionTarget'
          description: 表态对象
        emoji:
          $ref: '#/components/schemas/Emoji'
          description: 表态所用表情
      xml:
        name: MessageReaction
      description: 表情表态对象
    ReactionTarget:
      type: object
      properties:
        id:
          type: string
          description: 表态对象ID
        type:
          $ref: '#/components/schemas/ReactionTargetType'
      xml:
        name: ReactionTarget
      description: ReactionTarget
    AudioControl:
      type: object
      properties:
        audio_url:
          type: string
          description: 音频数据的url status为0时传
        text:
          type: string
          description: 状态文本（比如：简单爱-周杰伦），可选，status为0时传，其他操作不传
        status:
          $ref: '#/components/schemas/AudioControlStatus'
      xml:
        name: AudioControl
      description: 语音对象
    APIPermission:
      type: object
      properties:
        path:
          type: string
          description: 'API 接口名，例如 /guilds/{guild_id}/members/{user_id}'
        method:
          type: string
          description: 请求方法，例如 GET
        desc:
          type: string
          description: API 接口名称，例如 获取频道信
        auth_status:
          type: integer
          description: 授权状态，auth_stats 为 1 时已授权
      xml:
        name: APIPermission
      description: 接口权限对象
    APIPermissionDemand:
      type: object
      properties:
        guild_id:
          type: string
          description: 申请接口权限的频道 id
        channel_id:
          type: string
          description: 接口权限需求授权链接发送的子频道 id
        api_identify:
          $ref: '#/components/schemas/APIPermissionDemandIdentify'
          description: 权限接口唯一标识
        title:
          type: string
          description: 接口权限链接中的接口权限描述信息
        desc:
          type: string
          description: 接口权限链接中的机器人可使用功能的描述信息
      xml:
        name: APIPermissionDemand
      description: 接口权限需求对象
    APIPermissionDemandIdentify:
      type: object
      properties:
        path:
          type: string
          description: 'API 接口名，例如 /guilds/{guild_id}/members/{user_id}'
        name:
          type: string
          description: 请求方法，例如 GET
      xml:
        name: APIPermissionDemandIdentify
      description: 接口权限需求标识对象
    ChannelCreate:
      type: object
      properties:
        name:
          type: string
          description: 子频道名称
        type:
          $ref: '#/components/schemas/ChannelType'
        sub_type:
          $ref: '#/components/schemas/ChannelSubType'
        position:
          type: integer
          description: 排序值
        parent_id:
          type: string
          description: 所属分组 id，仅对子频道有效，对 子频道分组（ChannelType=4） 无效
        private_type:
          $ref: '#/components/schemas/PrivateType'
        private_user_ids:
          type: array
          items:
            type: string
          description: 子频道私密类型成员 ID
      required: 
        - name
        - type
        - sub_type
      xml:
        name: ChannelCreate
      description: 创建子频道请求对象
    ChannelUpdate:
      type: object
      properties:
        name:
          type: string
          description: 子频道名称
        type:
          $ref: '#/components/schemas/ChannelType'
        sub_type:
          $ref: '#/components/schemas/ChannelSubType'
        position:
          type: integer
          description: 排序值
        parent_id:
          type: string
          description: 所属分组 id，仅对子频道有效，对 子频道分组（ChannelType=4） 无效
        private_type:
          $ref: '#/components/schemas/PrivateType'
      xml:
        name: ChannelUpdate
      description: 修子频道请求对象
    GuildRole:
      type: object
      properties:
        id:
          type: string
          description: 身份组 ID
        name:
          type: string
          description: 名称
        color:
          type: number
          description: ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）
        hoist:
          type: number
          description: 是否在成员列表中单独展示, 0-否, 1-是
        number:
          type: number
          description: 人数
        member_limit:
          type: number
          description: 成员上限
      xml:
        name: GuildRole
      description: 频道身份组对象
    MessageSend:
      type: object
      properties:
        content:
          type: string
          description: 消息内容，文本内容，支持内嵌格式
        embed:
          $ref: "#/components/schemas/MessageEmbed"
          description: embed 消息，一种特殊的 ark
        ark:
          $ref: "#/components/schemas/MessageArk"
          description: ark 消息
        message_reference:
          $ref: "#/components/schemas/MessageReference"
          description: 引用消息
        image:
          type: string
          description: 图片url地址，平台会转存该图片，用于下发图片消息
        msg_id:
          type: string
          description: 要回复的消息id(Message.id), 在 AT_CREATE_MESSAGE 事件中获取
      minProperties: 1
    ScheduleCreate:
      type: object
      properties:
        name:
          type: string
          description: 日程名称
        description:
          type: string
          description: 日程描述
        start_timestamp:
          type: string
          description: 日程开始时间戳(ms)
          format: int64
        end_timestamp:
          type: string
          description: 日程结束时间戳(ms)
          format: int64
        creator:
          $ref: '#/components/schemas/Member'
          description: 创建者
        jump_channel_id:
          type: string
          description: 日程开始时跳转到的子频道 id
          format: int64
        remind_type:
          type: string
          description: 日程提醒类型
      required:
        - name
        - start_timestamp
        - end_timestamp
        - remind_type
      xml:
        name: ScheduleCreate
      description: 日程创建对象
    ScheduleUpdate:
      type: object
      properties:
        name:
          type: string
          description: 日程名称
        description:
          type: string
          description: 日程描述
        start_timestamp:
          type: string
          description: 日程开始时间戳(ms)
          format: int64
        end_timestamp:
          type: string
          description: 日程结束时间戳(ms)
          format: int64
        creator:
          $ref: '#/components/schemas/Member'
          description: 创建者
        jump_channel_id:
          type: string
          description: 日程开始时跳转到的子频道 id
          format: int64
        remind_type:
          type: string
          description: 日程提醒类型
      xml:
        name: ScheduleUpdate
      description: 日程更新对象
    SessionStartLimit:
      type: object
      properties:
        total:
          type: integer
          description: 每 24 小时可创建 Session 数
        remaining:
          type: integer
          description: 目前还可以创建的 Session 数
        reset_after:
          type: integer
          description: 重置计数的剩余时间(ms)
        max_concurrency:
          type: integer
          description: 每 5s 可以创建的 Session 数
      xml:
        name: SessionStartLimit
      description: 创建 Session 限制信息
    DefaultRoleIDs:
      type: string
      description: >
        统默认生成下列身份组ID:
          * `1` - 全体成员
          * `2` - 管理员
          * `4` - 群主/创建者
          * `5` - 子频道管理员
      enum:
        - 1
        - 2
        - 4
        - 5
    ChannelType:
      type: integer
      description: >
        子频道类型:
          * `0` - 文字子频道
          * `1` - 保留，不可用
          * `2` - 语音子频道
          * `3` - 保留，不可用
          * `4` - 子频道分组
          * `10005` - 直播子频道
          * `10006` - 应用子频道
          * `10007` - 论坛子频道
          > 注：由于QQ频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知 ID 的处理。
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 10005
        - 10006
        - 10007
    ChannelSubType:
      type: integer
      description: >
        子频道子类型:
          * `0` - 闲聊
          * `1` - 公告
          * `2` - 攻略
          * `3` - 开黑
          
          > 目前只有文字子频道具有 ChannelSubType 二级分类，同时二级分类也可能会不断增加，开发者也需要注意对未知 ID 的处理
      enum:
        - 0
        - 1
        - 2
        - 3
    PrivateType:
      type: integer
      description: >
        子频道私密类型:
          * `0` - 公开频道
          * `1` - 群主管理员可见
          * `2` - 群主管理员+指定成员，可使用 修改子频道权限接口 指定成员
      enum:
        - 0
        - 1
        - 2
    SpeakPermission:
      type: integer
      description: >
        子频道发言权限:
          * `0` - 无效类型
          * `1` - 所有人
          * `2` - 群主管理员+指定成员，可使用 修改子频道权限接口 指定成员
      enum:
        - 0
        - 1
        - 2
    Application:
      type: string
      description: >
        应用子频道的应用类型:
          * `1000000` - 王者开黑大厅
          * `1000001` - 互动小游戏
          * `1000010` - 腾讯投票
          * `1000051` - 飞车开黑大厅
          * `1000050` - 日程提醒
          * `1000070` - CoDM 开黑大厅
          * `1010000` - 和平精英开黑大厅

        > 由于QQ频道还在持续的迭代中，应用子频道的 application_id 还会持续新增，后续会不定期补充到文档中
    Permissions:
      type: string
      description: >
        * 用户/角色拥有的(子)频道权限

        * 权限是QQ频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。

        * 权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6FFF，会被序列化为十进制"28671"。

          | 权限 | 值 | 描述 |
          | --- | --- | --- |
          | 可查看子频道 | 0x0000000001 (1 << 0) | 支持`指定成员`可见类型，支持`身份组`可见类型 |
          | 可管理子频道 | 0x0000000002 (1 << 1) | 创建者、管理员、子频道管理员都具有此权限 |
          | 可发言子频道 | 0x0000000004 (1 << 2) | 支持`指定成员`发言类型，支持`身份组`发言类型  |
    RemindType:
      type: string
      description: >
        日程提醒类型:
          * `0` - 不提醒
          * `1` - 开始时提醒
          * `2` - 开始前 5 分钟提醒
          * `3` - 开始前 15 分钟提醒
          * `4` - 开始前 30 分钟提醒
          * `5` - 开始前 60 分钟提醒
    AudioControlStatus:
      type: integer
      description: >
        播放状态:
          * `0` - 开始播放操作
          * `1` - 暂停播放操作
          * `2` - 继续播放操作
          * `3` - 停止播放操作
    ReactionTargetType:
      type: string
      description: >
        表态对象类型:
          * `0` - 消息
          * `1` - 帖子
          * `2` - 评论
          * `3` - 回复   
    EmojiType:
      type: integer
      description: >
        表情类型 :
          * `1` - 系统表情
          * `2` - emoji表情
    EmojiID:
      type: string
      description: >
        emoji 表情 :
          本处列表仅包含部分表情，随着时间推移，可能会与线上情况相比有所增减。建议开发者如果要基于表情表态来做逻辑，优先针对已知的QQ系统表情类型（EmojiType=1）来处理。

          | 表情ID | 表情含义 |
          | ---  | ---  |
          | 0    | 惊讶   |
          | 1    | 撇嘴   |
          | 2    | 色    |
          | 3    | 发呆   |
          | 4    | 得意   |
          | 5    | 流泪   |
          | 6    | 害羞   |
          | 7    | 闭嘴   |
          | 8    | 睡    |
          | 9    | 大哭   |
          | 10   | 尴尬   |
          | 11   | 发怒   |
          | 12   | 调皮   |
          | 13   | 呲牙   |
          | 14   | 微笑   |
          | 15   | 难过   |
          | 16   | 酷    |
          | 18   | 抓狂   |
          | 19   | 吐    |
          | 20   | 偷笑   |
          | 21   | 可爱   |
          | 22   | 白眼   |
          | 23   | 傲慢   |
          | 24   | 饥饿   |
          | 25   | 困    |
          | 26   | 惊恐   |
          | 27   | 流汗   |
          | 28   | 憨笑   |
          | 29   | 悠闲   |
          | 30   | 奋斗   |
          | 31   | 咒骂   |
          | 32   | 疑问   |
          | 33   | 嘘    |
          | 34   | 晕    |
          | 35   | 折磨   |
          | 36   | 衰    |
          | 37   | 骷髅   |
          | 38   | 敲打   |
          | 39   | 再见   |
          | 41   | 发抖   |
          | 42   | 爱情   |
          | 43   | 跳跳   |
          | 46   | 猪头   |
          | 49   | 拥抱   |
          | 53   | 蛋糕   |
          | 54   | 闪电   |
          | 55   | 炸弹   |
          | 56   | 刀    |
          | 57   | 足球   |
          | 59   | 便便   |
          | 60   | 咖啡   |
          | 61   | 饭    |
          | 63   | 玫瑰   |
          | 64   | 凋谢   |
          | 66   | 爱心   |
          | 67   | 心碎   |
          | 69   | 礼物   |
          | 74   | 太阳   |
          | 75   | 月亮   |
          | 76   | 赞    |
          | 77   | 踩    |
          | 78   | 握手   |
          | 79   | 胜利   |
          | 85   | 飞吻   |
          | 86   | 怄火   |
          | 89   | 西瓜   |
          | 96   | 冷汗   |
          | 97   | 擦汗   |
          | 98   | 抠鼻   |
          | 99   | 鼓掌   |
          | 100  | 糗大了  |
          | 101  | 坏笑   |
          | 102  | 左哼哼  |
          | 103  | 右哼哼  |
          | 104  | 哈欠   |
          | 105  | 鄙视   |
          | 106  | 委屈   |
          | 107  | 快哭了  |
          | 108  | 阴险   |
          | 109  | 亲亲   |
          | 110  | 吓    |
          | 111  | 可怜   |
          | 112  | 菜刀   |
          | 113  | 啤酒   |
          | 114  | 篮球   |
          | 115  | 乒乓   |
          | 116  | 示爱   |
          | 117  | 瓢虫   |
          | 118  | 抱拳   |
          | 119  | 勾引   |
          | 120  | 拳头   |
          | 121  | 差劲   |
          | 122  | 爱你   |
          | 123  | NO   |
          | 124  | OK   |
          | 125  | 转圈   |
          | 126  | 磕头   |
          | 127  | 回头   |
          | 128  | 跳绳   |
          | 129  | 挥手   |
          | 130  | 激动   |
          | 131  | 街舞   |
          | 132  | 献吻   |
          | 133  | 左太极  |
          | 134  | 右太极  |
          | 136  | 双喜   |
          | 137  | 鞭炮   |
          | 138  | 灯笼   |
          | 140  | K歌   |
          | 144  | 喝彩   |
          | 145  | 祈祷   |
          | 146  | 爆筋   |
          | 147  | 棒棒糖  |
          | 148  | 喝奶   |
          | 151  | 飞机   |
          | 158  | 钞票   |
          | 168  | 药    |
          | 169  | 手枪   |
          | 171  | 茶    |
          | 172  | 眨眼睛  |
          | 173  | 泪奔   |
          | 174  | 无奈   |
          | 175  | 卖萌   |
          | 176  | 小纠结  |
          | 177  | 喷血   |
          | 178  | 斜眼笑  |
          | 179  | doge |
          | 180  | 惊喜   |
          | 181  | 骚扰   |
          | 182  | 笑哭   |
          | 183  | 我最美  |
          | 184  | 河蟹   |
          | 185  | 羊驼   |
          | 187  | 幽灵   |
          | 188  | 蛋    |
          | 190  | 菊花   |
          | 192  | 红包   |
          | 193  | 大笑   |
          | 194  | 不开心  |
          | 197  | 冷漠   |
          | 198  | 呃    |
          | 199  | 好棒   |
          | 200  | 拜托   |
          | 201  | 点赞   |
          | 202  | 无聊   |
          | 203  | 托脸   |
          | 204  | 吃    |
          | 205  | 送花   |
          | 206  | 害怕   |
          | 207  | 花痴   |
          | 208  | 小样儿  |
          | 210  | 飙泪   |
          | 211  | 我不看  |
          | 212  | 托腮   |
          | 214  | 啵啵   |
          | 215  | 糊脸   |
          | 216  | 拍头   |
          | 217  | 扯一扯  |
          | 218  | 舔一舔  |
          | 219  | 蹭一蹭  |
          | 220  | 拽炸天  |
          | 221  | 顶呱呱  |
          | 222  | 抱抱   |
          | 223  | 暴击   |
          | 224  | 开枪   |
          | 225  | 撩一撩  |
          | 226  | 拍桌   |
          | 227  | 拍手   |
          | 228  | 恭喜   |
          | 229  | 干杯   |
          | 230  | 嘲讽   |
          | 231  | 哼    |
          | 232  | 佛系   |
          | 233  | 掐一掐  |
          | 234  | 惊呆   |
          | 235  | 颤抖   |
          | 236  | 啃头   |
          | 237  | 偷看   |
          | 238  | 扇脸   |
          | 239  | 原谅   |
          | 240  | 喷脸   |
          | 241  | 生日快乐 |
          | 242  | 头撞击  |
          | 243  | 甩头   |
          | 244  | 扔狗   |
          | 245  | 加油必胜 |
          | 246  | 加油抱抱 |
          | 247  | 口罩护体 |
          | 260  | 办公   |
          | 261  | 忙碌   |
          | 262  | 心累   |
          | 263  | 沧桑   |
          | 264  | 捂脸   |
          | 265  | 刷手机  |
          | 266  | 嫌弃   |
          | 267  | 头秃   |
          | 268  | 问号   |
          | 269  | 暗中观察 |
          | 270  | 尴尬   |
          | 271  | 吃瓜   |
          | 272  | 呵呵   |
          | 273  | 柠檬   |
          | 274  | 南    |
          | 👗   | 连衣裙  |
          | 😏   | 哼哼   |
          | 😄   | 高兴   |
          | 😔   | 失落   |
          | 😍   | 花痴   |
          | 😉   | 媚眼   |
          | ☺    | 可爱   |
          | 😜   | 淘气   |
          | 😁   | 呲牙   |
          | 😝   | 吐舌   |
          | 😰   | 紧张   |
          | 😓   | 汗    |
          | 😚   | 亲亲   |
          | 😌   | 羞涩   |
          | 😊   | 嘿嘿   |
          | ❔    | 问好   |
          | ❕    | 叹号   |
          | ❌    | 错误   |
          | ☎    | 电话   |
          | 📷   | 相机   |
          | 📠   | 传真   |
          | 💻   | 电脑   |
          | 🎥   | 摄影机  |
          | 🎤   | 话筒   |
          | 🔫   | 手枪   |
          | 💿   | 光碟   |
          | 💓   | 爱心   |
          | ✨    | 闪光   |
          | ♣    | 扑克   |
          | 🀄   | 麻将   |
          | 〽    | 股票   |
          | 🎰   | 老虎机  |
          | 🚥   | 信号灯  |
          | 🚧   | 路障   |
          | 🎸   | 吉他   |
          | 💈   | 理发厅  |
          | 🛀   | 浴缸   |
          | 🚽   | 马桶   |
          | 🏠   | 家    |
          | ⛪    | 教堂   |
          | ⭕    | 正确   |
          | ⛄    | 雪人   |
          | 🌙   | 月亮   |
          | ☔    | 雨天   |
          | ☀    | 晴天   |
          | ☁    | 云朵   |
          | 💄   | 口红   |
          | 👟   | 鞋子   |
          | 👕   | 衣服   |
          | 👙   | 内衣   |
          | 👜   | 包    |
          | 🌂   | 雨伞   |
          | 👢   | 鞋子   |
          | 👠   | 高跟鞋  |
          | 🏦   | 银行   |
          | 👒   | 帽子   |
          | 🐭   | 老鼠   |
          | 🐳   | 海豚   |
          | 🐧   | 企鹅   |
          | 👼   | 天使   |
          | 🐯   | 老虎   |
          | 🐶   | 狗    |
          | 🐠   | 鱼    |
          | 🐛   | 虫    |
          | 👻   | 幽灵   |
          | 🐸   | 青蛙   |
          | 🐔   | 公鸡   |
          | 🐮   | 牛    |
          | 🐨   | 树懒   |
          | 🐤   | 小鸡   |
          | 💀   | 骷髅   |
          | 🐷   | 猪    |
          | 🐙   | 章鱼   |
          | 🐵   | 猴    |
          | 👦   | 男孩   |
          | 👧   | 女孩   |
          | 👨   | 爸爸   |
          | 👩   | 妈妈   |
          | ⛵    | 船    |
          | 🚌   | 公交   |
          | 🚀   | 火箭   |
          | 🐎   | 骑马   |
          | 🚲   | 自行车  |
          | 🚤   | 快艇   |
          | 🚗   | 汽车   |
          | 🚄   | 列车   |
          | ✈    | 飞机   |
          | 🔒   | 锁    |
          | 🔑   | 钥匙   |
          | 📫   | 文件   |
          | ♨    | 热    |
          | 💉   | 打针   |
          | 💩   | 便便   |
          | 👣   | 脚印   |
          | 🏥   | 医院   |
          | ⚡    | 闪电   |
          | 💤   | 睡觉   |
          | 💰   | 钱    |
          | 🏆   | 奖杯   |
          | 🔥   | 火    |
          | 🏨   | 酒店   |
          | 🏧   | 取款机  |
          | 🏪   | 超市   |
          | 🚹   | 男性   |
          | 💦   | 水    |
          | 🚺   | 女性   |
          | 💨   | 吹气   |
          | 📱   | 手机   |
          | ⭐    | 星星   |
          | 🔔   | 铃铛   |
          | 👑   | 皇冠   |
          | 💣   | 炸弹   |
          | 💍   | 戒指   |
          | 🐚   | 海螺   |
          | 🎈   | 气球   |
          | 🎀   | 蝴蝶结  |
          | 💝   | 礼物   |
          | 🌴   | 椰子树  |
          | 🎉   | 庆祝   |
          | 🌹   | 玫瑰   |
          | 🎄   | 圣诞树  |
          | 🚬   | 吸烟   |
          | 💊   | 药丸   |
          | 🍉   | 西瓜   |
          | 🍓   | 草莓   |
          | 🍊   | 橙子   |
          | 🍎   | 苹果   |
          | ☕    | 咖啡   |
          | 🍸   | 高脚杯  |
          | 🍻   | 干杯   |
          | 🍺   | 啤酒   |
          | 🍟   | 薯条   |
          | 🍳   | 煎蛋   |
          | 🙏   | 合十   |
          | 🍔   | 汉堡   |
          | 🍞   | 起司   |
          | 🎂   | 蛋糕   |
          | 🍣   | 寿司   |
          | 🍧   | 刨冰   |
          | 🍙   | 饭团   |
          | 🍜   | 拉面   |
          | 🍝   | 意面   |
          | 🍚   | 米饭   |
          | 👂   | 耳朵   |
          | 👄   | 嘴唇   |
          | 👃   | 鼻子   |
          | 👀   | 眼睛   |
          | 👇   | 向下   |
          | 👆   | 向上   |
          | 👉   | 向右   |
          | 👈   | 向左   |
          | 👌   | 好的   |
          | 👎   | 鄙视   |
          | ✌    | 胜利   |
          | 👏   | 鼓掌   |
          | ☝    | 向上   |
          | 👍   | 厉害   |
          | 👊   | 拳头   |
          | 💪   | 肌肉   |
          | 😂   | 激动   |
          | 😱   | 害怕   |
          | 😭   | 大哭   |
          | 😘   | 飞吻   |
          | 😳   | 瞪眼   |
          | 😒   | 不屑   |
  
  securitySchemes:
    authorization:
      type: apiKey
      name: Authorization
      in: header
  links: {}
  callbacks: {}
externalDocs:
  description: 'https://bot.q.qq.com/wiki/develop/api/'
  url: 'https://bot.q.qq.com/wiki/develop/api/'
